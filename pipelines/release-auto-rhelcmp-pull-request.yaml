---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lingyzhuang/release-auto-rhelcmp?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-cel-expression: event == "pull_request" && target_branch
      == "main"
    pipelinesascode.tekton.dev/task: >-
      [
      tasks/schedule-jobs.yaml,
      ]
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: test-auto-rhelcmp
    appstudio.openshift.io/component: test-auto-rhelcmp
    pipelines.appstudio.openshift.io/type: build
  generateName: release-auto-rhelcmp-pull-request
  namespace: lzhuang-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: registry-service.kind-registry/test-auto-rhelcmp:on-pr-{{revision}}
  - name: image-expires-after
    value: 5d
  - name: dockerfile
    value: /Dockerfile
  pipelineSpec:
    description: |
      Task to run release automation script to check compose builds daily.
    finally:
    - name: show-summary
      params:
      - name: pipelinerun-name
        value: $(context.pipelineRun.name)
      - name: git-url
        value: $(tasks.clone-repository.results.url)?rev=$(tasks.clone-repository.results.commit)
      - name: build-task-status
        value: $(tasks.build-image-index.status)
      taskRef:
        params:
        - name: name
          value: summary
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-summary:0.2@sha256:d97c04ab42f277b1103eb6f3a053b247849f4f5b3237ea302a8ecada3b24e15b
        - name: kind
          value: task
        resolver: bundles
      workspaces:
      - name: workspace
        workspace: workspace
    params:
    - description: Source Repository URL
      name: git-url
      type: string
    - default: ""
      description: Revision of the Source Repository
      name: revision
      type: string
    - default: .
      description: Path to the source code of an application's component from where
        to build image.
      name: path-context
      type: string
    - default: Dockerfile
      description: Path to the Dockerfile inside the context specified by parameter
        path-context
      name: dockerfile
      type: string
    - default: "false"
      description: Force rebuild image
      name: rebuild
      type: string
    - default: "false"
      description: Skip checks against built image
      name: skip-checks
      type: string
    - default: "false"
      description: Execute the build with network isolation
      name: hermetic
      type: string
    - default: ""
      description: Build dependencies to be prefetched by Cachi2
      name: prefetch-input
      type: string
    - default: "false"
      description: Java build
      name: java
      type: string
    - default: ""
      description: Image tag expiration time, time values could be something like
        1h, 2d, 3w for hours, days, and weeks, respectively.
      name: image-expires-after
    - default: "false"
      description: Build a source image.
      name: build-source-image
      type: string
    tasks:
    - name: clone-repository
      params:
      - name: url
        value: $(params.git-url)
      - name: revision
        value: $(params.revision)
      - name: subdirectory
        value: source
      taskRef:
        params:
        - name: name
          value: git-clone
        - name: version
          value: "0.9"
        - name: kind
          value: task
        resolver: hub
      workspaces:
      - name: output
        workspace: workspace
      - name: basic-auth
        workspace: git-auth
    - name: schedule-build
      runAfter:
      - clone-repository
      taskRef:
        name: schedule-jobs
        kind: Task
      workspaces:
      - name: source
        workspace: workspace
    workspaces:
    - name: workspace
    - name: git-auth
      optional: true
    - name: netrc
      optional: true
  taskRunTemplate: {}
  workspaces:
  - name: workspace
    volumeClaimTemplate:
      metadata:
        creationTimestamp: null
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
      status: {}
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
